-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Local Player
local player = Players.LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "BedWarsEnhancer"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 150, 0, 140)
mainFrame.Position = UDim2.new(0, 10, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

-- Toggle Buttons
local function createToggleButton(name, position, callback)
    local button = Instance.new("TextButton", mainFrame)
    button.Size = UDim2.new(0, 130, 0, 30)
    button.Position = UDim2.new(0, 10, 0, position)
    button.Text = name .. " OFF"
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 14
    button.AutoButtonColor = true

    local isEnabled = false

    button.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        button.Text = name .. (isEnabled and " ON" or " OFF")
        button.BackgroundColor3 = isEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        callback(isEnabled)
    end)
end

-- Kill Aura
local killAuraEnabled = false
local killAuraRange = 15

local function activateKillAura(enabled)
    killAuraEnabled = enabled
end

createToggleButton("Kill Aura", 10, activateKillAura)

-- Infinite Jump
local infiniteJumpEnabled = false

local function activateInfiniteJump(enabled)
    infiniteJumpEnabled = enabled
end

createToggleButton("Infinite Jump", 50, activateInfiniteJump)

-- Kill Aura Logic
RunService.Heartbeat:Connect(function()
    if killAuraEnabled then
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            for _, otherPlayer in pairs(Players:GetPlayers()) do
                if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if distance <= killAuraRange then
                        local humanoid = otherPlayer.Character:FindFirstChildOfClass("Humanoid")
                        if humanoid and humanoid.Health > 0 then
                            humanoid:TakeDamage(10)
                        end
                    end
                end
            end
        end
    end
end)

-- Infinite Jump Logic
UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local character = player.Character
        if character and character:FindFirstChildOfClass("Humanoid") then
            character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)
