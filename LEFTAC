local Players, RunService, Lighting = game:GetService("Players"), game:GetService("RunService"), game:GetService("Lighting")
local VirtualInput = game:GetService("VirtualInputManager")
local UIS = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local lp = Players.LocalPlayer

-- GUI Setup
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "LEFTAC"
gui.ResetOnSpawn = false

-- Toggle Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 100, 0, 30)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleBtn.Text = "Open LEFTAC"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.SourceSansBold
toggleBtn.TextSize = 14
toggleBtn.Parent = gui

-- Main Frame
local scrollFrame = Instance.new("ScrollingFrame", gui)
scrollFrame.Size = UDim2.new(0, 150, 0, 220)
scrollFrame.Position = UDim2.new(0, 10, 0, 50)
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 500)
scrollFrame.ScrollBarThickness = 6
scrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
scrollFrame.BackgroundTransparency = 0.2
scrollFrame.BorderSizePixel = 0
scrollFrame.Visible = false

-- Drag Support
local dragging, dragInput, dragStart, startPos
scrollFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = scrollFrame.Position
	end
end)
UIS.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
		local delta = input.Position - dragStart
		scrollFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- Toggle UI
toggleBtn.MouseButton1Click:Connect(function()
	scrollFrame.Visible = not scrollFrame.Visible
	toggleBtn.Text = scrollFrame.Visible and "Close LEFTAC" or "Open LEFTAC"
end)

-- Utility: Create Button
local yPos = 0
local function createButton(name, callback)
	local btn = Instance.new("TextButton", scrollFrame)
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.Position = UDim2.new(0, 5, 0, yPos)
	btn.Text = name .. ": OFF"
	btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 14
	yPos = yPos + 35

	local state = false
	btn.MouseButton1Click:Connect(function()
		state = not state
		btn.Text = name .. ": " .. (state and "ON" or "OFF")
		callback(state, btn)
	end)
end

-- Kill Aura
local killAura = false
local auraRange = 15
createButton("Kill Aura", function(state)
	killAura = state
end)

-- Infinite Jump
local infJump = false
createButton("Infinite Jump", function(state)
	infJump = state
end)
UIS.JumpRequest:Connect(function()
	if infJump and lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
		lp.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
	end
end)

-- Speed Boost
local speedBoost = false
createButton("Speed Boost", function(state)
	speedBoost = state
	if lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
		lp.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = state and 20 or 16
	end
end)

-- FPS Boost
createButton("FPS Boost", function(state)
	if state then
		Lighting.FogEnd = 1000
		Lighting.FogStart = 0
		Lighting.Brightness = 1
		Lighting.GlobalShadows = false
		Lighting.Ambient = Color3.fromRGB(100, 100, 100)
		Lighting.OutdoorAmbient = Color3.fromRGB(100, 100, 100)
		Lighting.Sky = nil
	else
		Lighting.FogEnd = 100000
		Lighting.GlobalShadows = true
	end
end)

-- No Sword Cooldown
local noCooldown = false
createButton("No Cooldown", function(state)
	noCooldown = state
end)

-- No Click Delay
local noClick = false
createButton("No Click Delay", function(state)
	noClick = state
end)

-- Kill Aura Logic
task.spawn(function()
	while true do
		if killAura and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
			local hrp = lp.Character.HumanoidRootPart
			for _, p in pairs(Players:GetPlayers()) do
				if p ~= lp and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
					local dist = (p.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
					if dist <= auraRange and p.Character:FindFirstChild("Humanoid") and p.Character.Humanoid.Health > 0 then
						local cam = workspace.CurrentCamera
						local screenPos, onScreen = cam:WorldToViewportPoint(p.Character.HumanoidRootPart.Position)
						if onScreen then
							local x = screenPos.X / cam.ViewportSize.X
							local y = screenPos.Y / cam.ViewportSize.Y
							VirtualInput:SendTouchEvent(1, 0, x, y)
							VirtualInput:SendTouchEvent(1, 2, x, y)
						end
					end
				end
			end
		end
		task.wait(0.1)
	end
end)

-- No Click Delay Logic
task.spawn(function()
	while true do
		if noClick and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
			local combatRemote = ReplicatedStorage:FindFirstChild("rbxts_include")?
				:FindFirstChild("node_modules")?
				:FindFirstChild("@rbxts")?
				:FindFirstChild("net")?
				:FindFirstChild("out")?
				:FindFirstChild("Client")?
				:FindFirstChild("Combat")?
				:FindFirstChild("CombatRemote")
			if combatRemote then
				combatRemote:FireServer()
			end
		end
		task.wait(0.05)
	end
end)

-- Maintain GUI after respawn
lp.CharacterAdded:Connect(function()
	task.wait(1)
	gui.Parent = lp:WaitForChild("PlayerGui")
	if speedBoost then
		lp.Character:WaitForChild("Humanoid").WalkSpeed = 20
	end
end)
