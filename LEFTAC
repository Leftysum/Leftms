
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local VirtualInput = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer

local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "BWEnhancer"
gui.ResetOnSpawn = false

local frame = Instance.new("ScrollingFrame", gui)
frame.Size = UDim2.new(0, 160, 0, 280)
frame.Position = UDim2.new(1, -170, 0.4, -140)
frame.CanvasSize = UDim2.new(0, 0, 2, 0)
frame.ScrollBarThickness = 5
frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local function makeToggle(name, defaultState, onToggle)
	local button = Instance.new("TextButton", frame)
	button.Size = UDim2.new(1, -10, 0, 30)
	button.Position = UDim2.new(0, 5, 0, #frame:GetChildren() * 35)
	button.TextColor3 = Color3.new(1,1,1)
	button.BackgroundColor3 = defaultState and Color3.fromRGB(0,200,0) or Color3.fromRGB(200,0,0)
	button.Text = name .. ": " .. (defaultState and "ON" or "OFF")
	button.Font = Enum.Font.SourceSansBold
	button.TextSize = 14
	button.AutoButtonColor = true

	local state = defaultState

	button.MouseButton1Click:Connect(function()
		state = not state
		button.Text = name .. ": " .. (state and "ON" or "OFF")
		button.BackgroundColor3 = state and Color3.fromRGB(0,200,0) or Color3.fromRGB(200,0,0)
		onToggle(state)
	end)
end

local infJump = false
makeToggle("Infinite Jump", false, function(state)
	infJump = state
end)
LocalPlayer.CharacterAdded:Connect(function(char)
	RunService.RenderStepped:Connect(function()
		if infJump and char:FindFirstChild("Humanoid") then
			char.Humanoid:ChangeState(3)
		end
	end)
end)

local voidSave = false
makeToggle("Void Save", false, function(state)
	voidSave = state
end)
RunService.Heartbeat:Connect(function()
	if voidSave and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local y = LocalPlayer.Character.HumanoidRootPart.Position.Y
		if y < -10 then
			LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 100, 0)
		end
	end
end)

local fpsBoost = false
makeToggle("FPS Boost", false, function(state)
	fpsBoost = state
	if state then
		Lighting.FogStart = 100
		Lighting.FogEnd = 100
		Lighting.Brightness = 1
		Lighting.GlobalShadows = false
		Lighting.OutdoorAmbient = Color3.fromRGB(128,128,128)
		Lighting.Ambient = Color3.fromRGB(128,128,128)
		Lighting.TimeOfDay = "00:00:00"
	else
		Lighting.FogStart = 0
		Lighting.FogEnd = 1000
		Lighting.GlobalShadows = true
		Lighting.Brightness = 2
	end
end)

local speedBoost = false
makeToggle("Speed Boost", false, function(state)
	speedBoost = state
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		LocalPlayer.Character.Humanoid.WalkSpeed = state and 20 or 16
	end
end)
LocalPlayer.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid").WalkSpeed = speedBoost and 20 or 16
end)

local killAura = false
local auraRange = 18
makeToggle("Kill Aura", false, function(state)
	killAura = state
end)
RunService.Heartbeat:Connect(function()
	if not killAura then return end
	local char = LocalPlayer.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Team ~= LocalPlayer.Team then
			local targetChar = player.Character
			if targetChar and targetChar:FindFirstChild("Humanoid") and targetChar:FindFirstChild("HumanoidRootPart") then
				if (targetChar.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude <= auraRange then
					local cam = workspace.CurrentCamera
					local pos = cam:WorldToViewportPoint(targetChar.HumanoidRootPart.Position + Vector3.new(0,1.5,0))
					VirtualInput:SendTouchEvent(1, 0, pos.X / cam.ViewportSize.X, pos.Y / cam.ViewportSize.Y)
					VirtualInput:SendTouchEvent(1, 2, pos.X / cam.ViewportSize.X, pos.Y / cam.ViewportSize.Y)
				end
			end
		end
	end
end)
