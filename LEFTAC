local VirtualInput = game:GetService("VirtualInputManager")
local LocalPlayer = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "LEFTAC"
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 140, 0, 120)
MainFrame.Position = UDim2.new(1, -150, 0, 30)
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
MainFrame.BackgroundTransparency = 0.2
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.Active = true
MainFrame.Draggable = true

local ToggleAura = Instance.new("TextButton", MainFrame)
ToggleAura.Size = UDim2.new(0, 120, 0, 30)
ToggleAura.Position = UDim2.new(0, 10, 0, 10)
ToggleAura.Text = "Kill Aura OFF"
ToggleAura.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ToggleAura.TextColor3 = Color3.new(1, 1, 1)
ToggleAura.Font = Enum.Font.SourceSansBold
ToggleAura.TextSize = 14

local ToggleIJ = Instance.new("TextButton", MainFrame)
ToggleIJ.Size = UDim2.new(0, 120, 0, 30)
ToggleIJ.Position = UDim2.new(0, 10, 0, 50)
ToggleIJ.Text = "Inf Jump OFF"
ToggleIJ.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ToggleIJ.TextColor3 = Color3.new(1, 1, 1)
ToggleIJ.Font = Enum.Font.SourceSansBold
ToggleIJ.TextSize = 14

local ToggleMain = Instance.new("TextButton", ScreenGui)
ToggleMain.Size = UDim2.new(0, 100, 0, 28)
ToggleMain.Position = UDim2.new(1, -110, 0, 5)
ToggleMain.Text = "Open LEFTAC"
ToggleMain.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleMain.BackgroundTransparency = 0.3
ToggleMain.TextColor3 = Color3.new(1, 1, 1)
ToggleMain.Font = Enum.Font.SourceSansSemibold
ToggleMain.TextSize = 13

ToggleMain.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        MainFrame.Visible = not MainFrame.Visible
        ToggleMain.Text = MainFrame.Visible and "Close LEFTAC" or "Open LEFTAC"
    end
end)

-- Kill Aura Logic
local auraOn = false
local auraRange = 15

function getClosestTarget(range)
    local closest, dist = nil, math.huge
    for _, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Team ~= LocalPlayer.Team then
            local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if myHRP then
                local d = (plr.Character.HumanoidRootPart.Position - myHRP.Position).Magnitude
                if d < range and d < dist then
                    closest = plr.Character.HumanoidRootPart
                    dist = d
                end
            end
        end
    end
    return closest
end

task.spawn(function()
    while true do
        if auraOn then
            local target = getClosestTarget(auraRange)
            if target then
                local cam = workspace.CurrentCamera
                local screenPos = cam:WorldToViewportPoint(target.Position)
                local view = cam.ViewportSize
                local x, y = screenPos.X / view.X, screenPos.Y / view.Y
                VirtualInput:SendTouchEvent(1, 0, x, y) -- Touch begin
                VirtualInput:SendTouchEvent(1, 2, x, y) -- Touch end
            end
        end
        task.wait(0.1)
    end
end)

ToggleAura.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        auraOn = not auraOn
        ToggleAura.Text = auraOn and "Kill Aura ON" or "Kill Aura OFF"
        ToggleAura.BackgroundColor3 = auraOn and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    end
end)

-- Infinite Jump
local ijOn = false

ToggleIJ.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        ijOn = not ijOn
        ToggleIJ.Text = ijOn and "Inf Jump ON" or "Inf Jump OFF"
        ToggleIJ.BackgroundColor3 = ijOn and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    end
end)

game:GetService("UserInputService").JumpRequest:Connect(function()
    if ijOn then
        local human = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if human then
            human:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Respawn handler
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    if not LocalPlayer.PlayerGui:FindFirstChild("LEFTAC") then
        ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    end
end)
