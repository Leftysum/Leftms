local Players, RunService, Lighting = game:GetService("Players"), game:GetService("RunService"), game:GetService("Lighting")
local VirtualInput = game:GetService("VirtualInputManager")
local lp = Players.LocalPlayer

-- GUI Setup
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "BedWarsScript"
gui.ResetOnSpawn = false

-- Main Frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 250, 0, 400)
mainFrame.Position = UDim2.new(1, -260, 0, 40)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false -- Start with GUI hidden

-- Toggle Button (Open/Close)
local toggleButton = Instance.new("TextButton", gui)
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(1, -60, 0, 40)
toggleButton.Text = "â‰¡"
toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 24

toggleButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

-- Scrollable Frame Inside Main Frame
local scrollFrame = Instance.new("ScrollingFrame", mainFrame)
scrollFrame.Size = UDim2.new(1, 0, 1, -50)
scrollFrame.Position = UDim2.new(0, 0, 0, 50)
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 400)
scrollFrame.ScrollBarThickness = 6
scrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
scrollFrame.BackgroundTransparency = 0.2
scrollFrame.BorderSizePixel = 0
scrollFrame.Active = true
scrollFrame.Draggable = true

-- Utility: Create Button
local function createButton(name, callback)
	local btn = Instance.new("TextButton", scrollFrame)
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.Position = UDim2.new(0, 5, 0, #scrollFrame:GetChildren() * 32)
	btn.Text = name
	btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 14
	btn.MouseButton1Click:Connect(callback)
end

-- Kill Aura (with Range)
local killAuraOn = false
local auraRange = 15
local killAuraButton

killAuraButton = createButton("Kill Aura: OFF", function()
	killAuraOn = not killAuraOn
	killAuraButton.Text = killAuraOn and "Kill Aura: ON" or "Kill Aura: OFF"
end)

-- Infinite Jump
local infJump = false
local infJumpButton

infJumpButton = createButton("Infinite Jump: OFF", function()
	infJump = not infJump
	infJumpButton.Text = infJump and "Infinite Jump: ON" or "Infinite Jump: OFF"
end)

-- FPS Boost
local fpsBoost = false
local fpsBoostButton

fpsBoostButton = createButton("FPS Boost: OFF", function()
	fpsBoost = not fpsBoost
	fpsBoostButton.Text = fpsBoost and "FPS Boost: ON" or "FPS Boost: OFF"

	if fpsBoost then
		Lighting.FogEnd = 1000
		Lighting.FogStart = 0
		Lighting.Brightness = 1
		Lighting.GlobalShadows = false
		Lighting.Ambient = Color3.fromRGB(100, 100, 100)
		Lighting.OutdoorAmbient = Color3.fromRGB(100, 100, 100)
		Lighting.Sky = nil
		local sky = Instance.new("Sky", Lighting)
		sky.SkyboxBk = ""
		sky.SkyboxDn = ""
		sky.SkyboxFt = ""
		sky.SkyboxLf = ""
		sky.SkyboxRt = ""
		sky.SkyboxUp = ""
	end
end)

-- Speed Boost
local speedBoost = false
local speedBoostButton

speedBoostButton = createButton("Speed Boost: OFF", function()
	speedBoost = not speedBoost
	speedBoostButton.Text = speedBoost and "Speed Boost: ON" or "Speed Boost: OFF"

	if lp.Character and lp.Character:FindFirstChild("Humanoid") then
		lp.Character.Humanoid.WalkSpeed = speedBoost and 20 or 16 -- 20 is safe WalkSpeed
	end
end)

-- Range Setting
local rangeDisplay = Instance.new("TextLabel", scrollFrame)
rangeDisplay.Size = UDim2.new(1, -10, 0, 25)
rangeDisplay.Position = UDim2.new(0, 5, 0, #scrollFrame:GetChildren() * 32)
rangeDisplay.Text = "Aura Range: 15"
rangeDisplay.TextColor3 = Color3.new(1, 1, 1)
rangeDisplay.BackgroundTransparency = 1
rangeDisplay.Font = Enum.Font.SourceSansBold
rangeDisplay.TextSize = 14

createButton("Range +", function()
	auraRange = math.clamp(auraRange + 1, 1, 18)
	rangeDisplay.Text = "Aura Range: " .. auraRange
end)

createButton("Range -", function()
	auraRange = math.clamp(auraRange - 1, 1, 18)
	rangeDisplay.Text = "Aura Range: " .. auraRange
end)

-- Infinite Jump Logic
game:GetService("UserInputService").JumpRequest:Connect(function()
	if infJump then
		lp.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)

-- Kill Aura Logic (360 Degree)
task.spawn(function()
	while true do
		if killAuraOn and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
			local hrp = lp.Character.HumanoidRootPart
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= lp and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
					local target = player.Character
					local dist = (target.HumanoidRootPart.Position - hrp.Position).Magnitude
					if dist <= auraRange and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
						-- No camera or direction check, will hit any player within the range
						local cam = workspace.CurrentCamera
						local screenPos, onScreen = cam:WorldToViewportPoint(target.HumanoidRootPart.Position)
						if onScreen then
							local x = screenPos.X / cam.ViewportSize.X
							local y = screenPos.Y / cam.ViewportSize.Y
							-- Simulate touch input
							VirtualInput:SendTouchEvent(1, 0, x, y)
							VirtualInput:SendTouchEvent(1, 2, x, y)
						end
					end
				end
			end
		end
		task.wait(0.1)
	end
end)

-- GUI persist on respawn
lp.CharacterAdded:Connect(function()
	task.wait(1)
	if not lp:FindFirstChild("PlayerGui"):FindFirstChild("BedWarsScript") then
		gui.Parent = lp:WaitForChild("PlayerGui")
	end
end)

-- Touch input for the GUI (Mobile Compatibility)
scrollFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch then
		-- Add your custom touch input handling logic here
		-- (for example, drag the GUI frame)
	end
end)

-- Draggable GUI Functionality
local dragging = false
local dragInput, dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
	end
end)

mainFrame.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

mainFrame.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)
