local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local lp = Players.LocalPlayer
local VirtualInput = game:GetService("VirtualInputManager")

-- GUI
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "BedWarsScript"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true

-- Open/Close Button
local openBtn = Instance.new("TextButton", gui)
openBtn.Size = UDim2.new(0, 60, 0, 30)
openBtn.Position = UDim2.new(0, 10, 0, 10)
openBtn.Text = "Open"
openBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
openBtn.TextColor3 = Color3.new(1, 1, 1)
openBtn.TextSize = 14
openBtn.Font = Enum.Font.SourceSansBold

-- Main GUI Frame
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 170, 0, 270)
frame.Position = UDim2.new(0, 10, 0, 50)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Visible = false

-- Draggable (Custom for Android)
local dragging, dragInput, dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)

frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UIS.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Button Template
local function createButton(text, order, callback)
	local btn = Instance.new("TextButton", frame)
	btn.Size = UDim2.new(1, -10, 0, 30)
	btn.Position = UDim2.new(0, 5, 0, 5 + (order - 1) * 35)
	btn.Text = text
	btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.TextSize = 14
	btn.Font = Enum.Font.SourceSansBold
	btn.MouseButton1Click:Connect(function()
		callback(btn)
	end)
end

-- Feature Toggles
local toggles = {
	KillAura = false,
	InfJump = false,
	FPSBoost = false,
	SpeedBoost = false,
	NoSwordCD = false,
	NoClickDelay = false
}

-- Feature Buttons
createButton("Kill Aura: OFF", 1, function(btn)
	toggles.KillAura = not toggles.KillAura
	btn.Text = "Kill Aura: " .. (toggles.KillAura and "ON" or "OFF")
end)

createButton("Infinite Jump: OFF", 2, function(btn)
	toggles.InfJump = not toggles.InfJump
	btn.Text = "Infinite Jump: " .. (toggles.InfJump and "ON" or "OFF")
end)

createButton("Speed Boost: OFF", 3, function(btn)
	toggles.SpeedBoost = not toggles.SpeedBoost
	btn.Text = "Speed Boost: " .. (toggles.SpeedBoost and "ON" or "OFF")
	if lp.Character and lp.Character:FindFirstChild("Humanoid") then
		lp.Character.Humanoid.WalkSpeed = toggles.SpeedBoost and 20 or 16
	end
end)

createButton("No Sword CD: OFF", 4, function(btn)
	toggles.NoSwordCD = not toggles.NoSwordCD
	btn.Text = "No Sword CD: " .. (toggles.NoSwordCD and "ON" or "OFF")
end)

createButton("No Click Delay: OFF", 5, function(btn)
	toggles.NoClickDelay = not toggles.NoClickDelay
	btn.Text = "No Click Delay: " .. (toggles.NoClickDelay and "ON" or "OFF")
end)

-- GUI Toggle Button
openBtn.MouseButton1Click:Connect(function()
	frame.Visible = not frame.Visible
	openBtn.Text = frame.Visible and "Close" or "Open"
end)

-- Infinite Jump Logic
UIS.JumpRequest:Connect(function()
	if toggles.InfJump and lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
		lp.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)

-- Kill Aura Logic
task.spawn(function()
	while true do
		if toggles.KillAura and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
			local root = lp.Character.HumanoidRootPart
			for _, plr in pairs(Players:GetPlayers()) do
				if plr ~= lp and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") then
					local hrp = plr.Character.HumanoidRootPart
					if (hrp.Position - root.Position).Magnitude <= 18 and plr.Character.Humanoid.Health > 0 then
						local cam = workspace.CurrentCamera
						local screenPos, visible = cam:WorldToViewportPoint(hrp.Position)
						if visible then
							local x = screenPos.X / cam.ViewportSize.X
							local y = screenPos.Y / cam.ViewportSize.Y
							VirtualInput:SendTouchEvent(1, 0, x, y)
							VirtualInput:SendTouchEvent(1, 2, x, y)
						end
					end
				end
			end
		end
		task.wait(0.1)
	end
end)

-- No Click Delay Logic (Fire remote quickly)
task.spawn(function()
	while true do
		if toggles.NoClickDelay then
			local attackRemote = ReplicatedStorage:FindFirstChild("rbxts_include") and ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("TS") and ReplicatedStorage.rbxts_include.node_modules.TS:FindFirstChild("game") and ReplicatedStorage.rbxts_include.node_modules.TS.game:FindFirstChild("combat") and ReplicatedStorage.rbxts_include.node_modules.TS.game.combat:FindFirstChild("combat-controller")
			if attackRemote then
				pcall(function()
					attackRemote = require(attackRemote).AttackRemote
					if attackRemote then
						attackRemote:FireServer()
					end
				end)
			end
		end
		task.wait(0.05)
	end
end)

-- Reset GUI after respawn
lp.CharacterAdded:Connect(function()
	task.wait(1)
	if not gui.Parent then
		gui.Parent = lp:WaitForChild("PlayerGui")
	end
end)
